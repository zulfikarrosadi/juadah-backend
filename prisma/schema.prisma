generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model products {
  id          BigInt    @id @default(autoincrement())
  name        String
  description String
  price       Float
  images      Json?
  ratings     ratings[]
  orders      orders[]
}

model ratings {
  id_user    BigInt
  id_product BigInt
  star       Int
  message    String
  products   products @relation(fields: [id_product], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users    @relation(fields: [id_user], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([id_user, id_product])
}

model users {
  id                 BigInt     @id @default(autoincrement())
  fullname           String
  email              String     @unique
  password           String
  refresh_token      String?
  email_verified     Boolean?   @default(false)
  verification_token String?    @db.Char(6)
  role               Role       @default(USER)
  ratings            ratings[]
  orders             orders[]
  adresses           adresses[]
}

model adresses {
  id           Int    @id @default(autoincrement())
  province     String
  city         String
  subdistrict  String
  village      String
  postcal_code String @db.Char(6)
  full_address String
  user_id      BigInt

  user   users    @relation(fields: [user_id], references: [id])
  orders orders[]
}

model orders {
  id                 String             @id
  transaction_id     String?
  user_id            BigInt
  product_id         BigInt
  amount             Int // how many product user bought
  total_price        String // amount x product price
  transaction_status Transaction_Status?
  created_at         BigInt
  completed_at       BigInt?
  payment_type       String?
  address_id         Int

  user    users    @relation(fields: [user_id], references: [id])
  product products @relation(fields: [product_id], references: [id])
  address adresses @relation(fields: [address_id], references: [id])
}

enum crdb_internal_region {
  gcp_asia_southeast1 @map("gcp-asia-southeast1")
}

enum Role {
  ADMIN
  USER
}

enum Transaction_Status {
  capture
  settlement
  pending
  deny
  cancel
  expire
  failure
  refund
  partial_refund
  authorize
}
